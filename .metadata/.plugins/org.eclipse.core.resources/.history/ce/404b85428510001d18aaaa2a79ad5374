<!DOCTYPE html>
<html lang="en" xmlns:th="http://www.thymeleaf.org">
<head>
<meta charset="UTF-8">
<title>Employee Management System</title>
<link rel="stylesheet"
	href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
	integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
	crossorigin="anonymous">
<style>
#frm {
	width: 500px;
	margin: auto;
	margin-top: 100px;
}

.rad-card {
	background:
		url("https://www.xtrafondos.com/en/descargar.php?id=7461&resolucion=1920x1080");
	height: 100vh;
}

.card {
	background-color: #ffffff26;
	background: rgba(255, 255, 255, 0.3);
	box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
	backdrop-filter: blur(3.5px);
	-webkit-backdrop-filter: blur(3.5px);
	border-radius: 10px;
	border: 1px solid rgba(255, 255, 255, 0.18);
}

.top-head {
	background-color: #5a5b5d42 !important;
}

table input, table select {
	background-color: #ffffff00 !important;
	color: black;
	padding: 10px;
	background: rgba(255, 255, 255, 0.3);
	box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
	backdrop-filter: blur(3.5px);
	-webkit-backdrop-filter: blur(3.5px);
	border-radius: 10px;
	border: 1px solid rgba(255, 255, 255, 0.18);
}

.bg-itadori {
	background:
		url("https://www.xtrafondos.com/en/descargar.php?id=7461&resolucion=1920x1080");
	height: 100vh;
}

.glassmorp {
	background: rgba(255 255 255/ 5%);
	box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
	backdrop-filter: blur(3.5px);
	-webkit-backdrop-filter: blur(3.5px);
	border-radius: 10px;
	border: 1px solid rgba(255, 255, 255, 0.18);
}

.table-hover tbody tr:hover {
	color: cyan;
	background-color: rgba(0, 0, 0, 0.075);
	transform: scale(1.01);
}
</style>
</head>
<body class='bg-itadori'>
	<div class='bg-itadori' style='margin: auto; padding: 150px'>
		<div class='glassmorp'>

			<form id="frm" action="#" th:action="@{/saveEmployee}"
				th:object="${employee}" method="POST">
				<table class='table  text-white table-striped '>
					<tr>
						<td><input type="text" th:field="*{name}"
							placeholder="Enter Employee Name" class='form-control mb-4 col-4'></td>
					</tr>
					<tr>
						<td>
					<input type="text" th:field="*{email}"
						placeholder="Enter Employee email" class='form-control mb-4 col-4'/>
					</td>
					</tr>
					<tr>
						<td>
					<input type="text" th:field="*{mobile}"
						placeholder="Enter Employee mobile"
						class='form-control mb-4 col-4'>
					</td>
					</tr>
					<tr>
						<td>
					<input type="date" th:field="*{dob}"
						class='form-control mb-4 col-4'>
					</td>
					</tr>
					<tr>
						<td>
					<input type="text" th:field="*{city}"
						placeholder="Enter Employee city" class='form-control mb-4 col-4'>
					<tr>
						<td>
					<input type="text" th:field="*{gender}"
						placeholder="Enter Employee gender"
						class='form-control mb-4 col-4'>
					</td>
					</tr>
					<tr>
						<td>
					<button class='btn btn-info col-2' type='submit'>Add</button>
					</td>
					</tr>

					</tbody>
				</table>
			</form>
		</div>
	</div>
</body>
</html>




int nodes=e.size();
        vector<int> adj[nodes];
        for(int i=0;i<e.size();i++){
            if(e[i]!=-1){
                adj[i].push_back(e[i]);
            }
        }
        vector<int> x(nodes,1e8),y(nodes,1e8);
        queue<int> que;
        que.push(node1);
        
       x[node1]=0;
        while(!que.empty()){
    
            int sq=que.size();
            for(int i=0;i<que.size();i++){
                auto it=que.front();
                que.pop();
                for(auto itr:adj[it]){
                    if(x[itr]==1e8){
                        x[itr]=x[it]+1;
                        que.push(itr);
                    }
                }
            }
        }
          que.push(node2);
        
       y[node2]=0;
        while(!que.empty()){
    
            int sq=que.size();
            for(int i=0;i<que.size();i++){
                auto it=que.front();
                que.pop();
                for(auto itr:adj[it]){
                    if(y[itr]==1e8){
                        y[itr]=y[it]+1;
                        que.push(itr);
                    }
                }
            }
        }
        int w=INT_MAX;
        int z=-1;
        for(int i=0;i<nodes;i++){
            if(x[i]!=1e8&&y[i]!=1e8){
int p=max(x[i],y[i]);
                if(w>p){
                    w=p;
                    z=i;
                }
            }
        }
        return z;
