package com.practice;

import org.springframework.beans.factory.BeanFactory;
import org.springframework.beans.factory.xml.XmlBeanFactory;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.core.io.ClassPathResource;
import org.springframework.core.io.Resource;

@SuppressWarnings("deprecation")
public class Client {
	public static void main(String[] args)
	{
		Employee employee = new Employee();
		employee.setEid(0);
		employee.setEname("Hareesh");
		employee.setEsalary(20000);
		
		System.out.println(employee);
		
		//Inversion of Control (IOC)
		// 1. Adding the JAR Files
		// 2. Configure Java Objects in an XML file
		// 3. Use IOC Container eg:BeanFactory or ApplicationContext to get the objects constructed by them
//		@SuppressWarnings("resource")
//		ApplicationContext context = new ClassPathXmlApplicationContext("employee.xml");
//		Employee e1 = (Employee) context.getBean("employee1");
//		System.out.println(e1);
//		
//		Employee e2 = context.getBean("employee2",Employee.class);
//		System.out.println(e2);
		
		// Deprecated Old method but still trying out
		Resource resource1 = new ClassPathResource("employee.xml");
		BeanFactory factory = new XmlBeanFactory(resource1);
		
		Employee e1_ = factory.getBean("employee3",Employee.class);
		System.out.println(e1_);
		
		
		
		
	}
}
